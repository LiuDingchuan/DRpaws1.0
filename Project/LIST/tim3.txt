; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\obj\tim3.o --asm_dir=..\LIST\ --list_dir=..\LIST\ --depend=..\obj\tim3.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\casual\inc -I..\..\user\INC -IC:\Users\24828\AppData\Local\Arm\Packs\Keil\STM32F1xx_DFP\1.0.5\Device\Include -IE:\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=531 -DSTM32F10X_MD -DSTM32F10X_MD -DUSE_STDPERIPH_DRIVER --omf_browse=..\obj\tim3.crf ..\..\user\SRC\tim3.c]
                          THUMB

                          AREA ||i.TIM3_IRQHandler||, CODE, READONLY, ALIGN=2

                  TIM3_IRQHandler PROC
;;;25     
;;;26     void TIM3_IRQHandler()
000000  b510              PUSH     {r4,lr}
;;;27     {
;;;28     	if(TIM_GetITStatus(TIM3,TIM_IT_Update)==SET)//Òç³öÖÐ¶Ï
000002  2101              MOVS     r1,#1
000004  484c              LDR      r0,|L1.312|
000006  f7fffffe          BL       TIM_GetITStatus
00000a  2801              CMP      r0,#1
00000c  d17e              BNE      |L1.268|
;;;29     	{
;;;30     		if(flag.LeftHandCounting)
00000e  484b              LDR      r0,|L1.316|
000010  7a00              LDRB     r0,[r0,#8]  ; flag
000012  b1a0              CBZ      r0,|L1.62|
;;;31     		{
;;;32     			flag.LeftHandcnt++;
000014  4849              LDR      r0,|L1.316|
000016  8a00              LDRH     r0,[r0,#0x10]  ; flag
000018  1c40              ADDS     r0,r0,#1
00001a  4948              LDR      r1,|L1.316|
00001c  8208              STRH     r0,[r1,#0x10]
;;;33     			if(flag.LeftHandcnt>=650)
00001e  4608              MOV      r0,r1
000020  8a00              LDRH     r0,[r0,#0x10]  ; flag
000022  f240218a          MOV      r1,#0x28a
000026  4288              CMP      r0,r1
000028  db09              BLT      |L1.62|
;;;34     			{
;;;35     				flag.isLeftHandFinished=true;
00002a  2001              MOVS     r0,#1
00002c  4943              LDR      r1,|L1.316|
00002e  7308              STRB     r0,[r1,#0xc]
;;;36     				flag.LeftHandCounting=false;
000030  2000              MOVS     r0,#0
000032  7208              STRB     r0,[r1,#8]
;;;37     				flag.LeftHandPrv=flag.LeftHand;
000034  4608              MOV      r0,r1
000036  7800              LDRB     r0,[r0,#0]  ; flag
000038  7108              STRB     r0,[r1,#4]
;;;38     				flag.LeftHandcnt=0;
00003a  2000              MOVS     r0,#0
00003c  8208              STRH     r0,[r1,#0x10]
                  |L1.62|
;;;39     			}		
;;;40     		}
;;;41     		if(flag.LeftPawCounting)
00003e  483f              LDR      r0,|L1.316|
000040  7a40              LDRB     r0,[r0,#9]  ; flag
000042  b188              CBZ      r0,|L1.104|
;;;42     		{
;;;43     			flag.LeftPawcnt++;
000044  483d              LDR      r0,|L1.316|
000046  8a40              LDRH     r0,[r0,#0x12]  ; flag
000048  1c40              ADDS     r0,r0,#1
00004a  493c              LDR      r1,|L1.316|
00004c  8248              STRH     r0,[r1,#0x12]
;;;44     			if(flag.LeftPawcnt>=20)
00004e  4608              MOV      r0,r1
000050  8a40              LDRH     r0,[r0,#0x12]  ; flag
000052  2814              CMP      r0,#0x14
000054  db08              BLT      |L1.104|
;;;45     			{
;;;46     				flag.isLeftPawFinished=true;
000056  2001              MOVS     r0,#1
000058  7348              STRB     r0,[r1,#0xd]
;;;47     				flag.LeftPawCounting=false;
00005a  2000              MOVS     r0,#0
00005c  7248              STRB     r0,[r1,#9]
;;;48     				flag.LeftPawPrv=flag.LeftPaw;
00005e  4608              MOV      r0,r1
000060  7840              LDRB     r0,[r0,#1]  ; flag
000062  7148              STRB     r0,[r1,#5]
;;;49     				flag.LeftHandcnt=0;
000064  2000              MOVS     r0,#0
000066  8208              STRH     r0,[r1,#0x10]
                  |L1.104|
;;;50     			}
;;;51     		}
;;;52     		if(flag.RightHandCounting)
000068  4834              LDR      r0,|L1.316|
00006a  7a80              LDRB     r0,[r0,#0xa]  ; flag
00006c  2800              CMP      r0,#0
00006e  d046              BEQ      |L1.254|
;;;53     		{
;;;54     			flag.RighthandStrectchcnt++;
000070  4832              LDR      r0,|L1.316|
000072  8b00              LDRH     r0,[r0,#0x18]  ; flag
000074  1c40              ADDS     r0,r0,#1
000076  4931              LDR      r1,|L1.316|
000078  8308              STRH     r0,[r1,#0x18]
;;;55     			if(flag.RightHand==true)
00007a  4608              MOV      r0,r1
00007c  7880              LDRB     r0,[r0,#2]  ; flag
00007e  2801              CMP      r0,#1
000080  d11c              BNE      |L1.188|
;;;56     			{
;;;57     				if(flag.RighthandStrectchcnt>=500)
000082  4608              MOV      r0,r1
000084  8b00              LDRH     r0,[r0,#0x18]  ; flag
000086  f5b07ffa          CMP      r0,#0x1f4
00008a  db07              BLT      |L1.156|
;;;58     				{
;;;59     					valve[1]=1;
00008c  2001              MOVS     r0,#1
00008e  492c              LDR      r1,|L1.320|
000090  7048              STRB     r0,[r1,#1]
;;;60     					flag.RightHandcnt++;
000092  482a              LDR      r0,|L1.316|
000094  8a80              LDRH     r0,[r0,#0x14]  ; flag
000096  1c40              ADDS     r0,r0,#1
000098  4928              LDR      r1,|L1.316|
00009a  8288              STRH     r0,[r1,#0x14]
                  |L1.156|
;;;61     				}
;;;62     				if(flag.RightHandcnt>=1600)
00009c  4827              LDR      r0,|L1.316|
00009e  8a80              LDRH     r0,[r0,#0x14]  ; flag
0000a0  f5b06fc8          CMP      r0,#0x640
0000a4  db2b              BLT      |L1.254|
;;;63     				{					
;;;64     					flag.isRightHandFinished=true;
0000a6  2001              MOVS     r0,#1
0000a8  4924              LDR      r1,|L1.316|
0000aa  7388              STRB     r0,[r1,#0xe]
;;;65     					flag.RightHandCounting=false;
0000ac  2000              MOVS     r0,#0
0000ae  7288              STRB     r0,[r1,#0xa]
;;;66     					flag.RightHandPrv=flag.RightHand;
0000b0  4608              MOV      r0,r1
0000b2  7880              LDRB     r0,[r0,#2]  ; flag
0000b4  7188              STRB     r0,[r1,#6]
;;;67     					flag.RightHandcnt=0;
0000b6  2000              MOVS     r0,#0
0000b8  8288              STRH     r0,[r1,#0x14]
0000ba  e020              B        |L1.254|
                  |L1.188|
;;;68     				}
;;;69     			}
;;;70     			else
;;;71     			{
;;;72     				flag.RighthandStrectchcnt++;
0000bc  481f              LDR      r0,|L1.316|
0000be  8b00              LDRH     r0,[r0,#0x18]  ; flag
0000c0  1c40              ADDS     r0,r0,#1
0000c2  491e              LDR      r1,|L1.316|
0000c4  8308              STRH     r0,[r1,#0x18]
;;;73     				if(flag.RighthandStrectchcnt>=500)
0000c6  4608              MOV      r0,r1
0000c8  8b00              LDRH     r0,[r0,#0x18]  ; flag
0000ca  f5b07ffa          CMP      r0,#0x1f4
0000ce  db07              BLT      |L1.224|
;;;74     				{
;;;75     					valve[1]=0;
0000d0  2000              MOVS     r0,#0
0000d2  491b              LDR      r1,|L1.320|
0000d4  7048              STRB     r0,[r1,#1]
;;;76     					flag.RightHandcnt++;
0000d6  4819              LDR      r0,|L1.316|
0000d8  8a80              LDRH     r0,[r0,#0x14]  ; flag
0000da  1c40              ADDS     r0,r0,#1
0000dc  4917              LDR      r1,|L1.316|
0000de  8288              STRH     r0,[r1,#0x14]
                  |L1.224|
;;;77     				}
;;;78     				if(flag.RightHandcnt>=1600)
0000e0  4816              LDR      r0,|L1.316|
0000e2  8a80              LDRH     r0,[r0,#0x14]  ; flag
0000e4  f5b06fc8          CMP      r0,#0x640
0000e8  db09              BLT      |L1.254|
;;;79     				{
;;;80     					flag.isRightHandFinished=true;
0000ea  2001              MOVS     r0,#1
0000ec  4913              LDR      r1,|L1.316|
0000ee  7388              STRB     r0,[r1,#0xe]
;;;81     					flag.RightHandCounting=false;
0000f0  2000              MOVS     r0,#0
0000f2  7288              STRB     r0,[r1,#0xa]
;;;82     					flag.RightHandPrv=flag.RightHand;
0000f4  4608              MOV      r0,r1
0000f6  7880              LDRB     r0,[r0,#2]  ; flag
0000f8  7188              STRB     r0,[r1,#6]
;;;83     					flag.RightHandcnt=0;
0000fa  2000              MOVS     r0,#0
0000fc  8288              STRH     r0,[r1,#0x14]
                  |L1.254|
;;;84     				}		
;;;85     			}
;;;86     		}	
;;;87     		if(flag.RightPawCounting)
0000fe  480f              LDR      r0,|L1.316|
000100  7ac0              LDRB     r0,[r0,#0xb]  ; flag
000102  b118              CBZ      r0,|L1.268|
;;;88     		{
;;;89     			flag.RightPawcnt++;
000104  480d              LDR      r0,|L1.316|
000106  8ac0              LDRH     r0,[r0,#0x16]  ; flag
000108  1c40              ADDS     r0,r0,#1
00010a  e000              B        |L1.270|
                  |L1.268|
00010c  e00e              B        |L1.300|
                  |L1.270|
00010e  490b              LDR      r1,|L1.316|
000110  82c8              STRH     r0,[r1,#0x16]
;;;90     			if(flag.RightPawcnt>=20)
000112  4608              MOV      r0,r1
000114  8ac0              LDRH     r0,[r0,#0x16]  ; flag
000116  2814              CMP      r0,#0x14
000118  db08              BLT      |L1.300|
;;;91     			{
;;;92     				flag.isRightPawFinished=true;
00011a  2001              MOVS     r0,#1
00011c  73c8              STRB     r0,[r1,#0xf]
;;;93     				flag.RightPawCounting=false;
00011e  2000              MOVS     r0,#0
000120  72c8              STRB     r0,[r1,#0xb]
;;;94     				flag.RightPawPrv=flag.RightPaw;
000122  4608              MOV      r0,r1
000124  78c0              LDRB     r0,[r0,#3]  ; flag
000126  71c8              STRB     r0,[r1,#7]
;;;95     				flag.RightPawcnt=0;
000128  2000              MOVS     r0,#0
00012a  82c8              STRH     r0,[r1,#0x16]
                  |L1.300|
;;;96     			}
;;;97     		}
;;;98     	}
;;;99     	TIM_ClearITPendingBit(TIM3, TIM_IT_Update); //Çå³ýÖÐ¶Ï±êÖ¾Î»
00012c  2101              MOVS     r1,#1
00012e  4802              LDR      r0,|L1.312|
000130  f7fffffe          BL       TIM_ClearITPendingBit
;;;100    }	
000134  bd10              POP      {r4,pc}
;;;101    		
                          ENDP

000136  0000              DCW      0x0000
                  |L1.312|
                          DCD      0x40000400
                  |L1.316|
                          DCD      flag
                  |L1.320|
                          DCD      valve

                          AREA ||i.TIM3_Init||, CODE, READONLY, ALIGN=2

                  TIM3_Init PROC
;;;2      
;;;3      void TIM3_Init()
000000  b51f              PUSH     {r0-r4,lr}
;;;4      {
;;;5      	TIM_TimeBaseInitTypeDef TIM3_Structure;
;;;6      	NVIC_InitTypeDef NVIC_InitStructure;	
;;;7      	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3,ENABLE);
000002  2101              MOVS     r1,#1
000004  2002              MOVS     r0,#2
000006  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;8      		
;;;9      	TIM3_Structure.TIM_Period = 72-1;	
00000a  2047              MOVS     r0,#0x47
00000c  f8ad0008          STRH     r0,[sp,#8]
;;;10     	TIM3_Structure.TIM_Prescaler = 1000-1;	
000010  f24030e7          MOV      r0,#0x3e7
000014  f8ad0004          STRH     r0,[sp,#4]
;;;11     	TIM3_Structure.TIM_ClockDivision = 0;
000018  2000              MOVS     r0,#0
00001a  f8ad000a          STRH     r0,[sp,#0xa]
;;;12     	TIM3_Structure.TIM_CounterMode = TIM_CounterMode_Up;
00001e  f8ad0006          STRH     r0,[sp,#6]
;;;13     	TIM_TimeBaseInit(TIM3, &TIM3_Structure);
000022  a901              ADD      r1,sp,#4
000024  480f              LDR      r0,|L2.100|
000026  f7fffffe          BL       TIM_TimeBaseInit
;;;14     	
;;;15     	NVIC_InitStructure.NVIC_IRQChannel = TIM3_IRQn;
00002a  201d              MOVS     r0,#0x1d
00002c  f88d0000          STRB     r0,[sp,#0]
;;;16     	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 1;
000030  2001              MOVS     r0,#1
000032  f88d0001          STRB     r0,[sp,#1]
;;;17     	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
000036  2000              MOVS     r0,#0
000038  f88d0002          STRB     r0,[sp,#2]
;;;18     	NVIC_InitStructure.NVIC_IRQChannelCmd=ENABLE;
00003c  2001              MOVS     r0,#1
00003e  f88d0003          STRB     r0,[sp,#3]
;;;19     	NVIC_Init(&NVIC_InitStructure);
000042  4668              MOV      r0,sp
000044  f7fffffe          BL       NVIC_Init
;;;20     	
;;;21     	TIM_ClearFlag(TIM3, TIM_FLAG_Update);
000048  2101              MOVS     r1,#1
00004a  4806              LDR      r0,|L2.100|
00004c  f7fffffe          BL       TIM_ClearFlag
;;;22     	TIM_ITConfig(TIM3, TIM_IT_Update, ENABLE);
000050  2201              MOVS     r2,#1
000052  4611              MOV      r1,r2
000054  4803              LDR      r0,|L2.100|
000056  f7fffffe          BL       TIM_ITConfig
;;;23     	TIM_Cmd(TIM3,ENABLE);
00005a  2101              MOVS     r1,#1
00005c  4801              LDR      r0,|L2.100|
00005e  f7fffffe          BL       TIM_Cmd
;;;24     }
000062  bd1f              POP      {r0-r4,pc}
;;;25     
                          ENDP

                  |L2.100|
                          DCD      0x40000400
